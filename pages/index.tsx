import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import ShoppingList from '../components/ShoppingList'
import { Product } from '../interface/Products'
import useShoppingStore from '../app/shoppingStore'
import { useEffect, useState } from 'react'


// const useShoppingStore = dynamic(() => import('../app/shoppingStore'), {ssr: false} )

interface Products {
  products: Product[]
  // cart: []
}

const Home: NextPage<Products> = ({products}) => {
  const [cartData ,setCartData] = useState<any>()
  const { cart } = useShoppingStore((state) => ({
    cart: state.cart
  }))
  
  // To avoid React Hydration Error while using Zustand
  useEffect(() => {
    setCartData(cart)
  },[cart])

  return (
    <div>
      <Head>
        <title>Zustand Shopping Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Create a Navbar for this */}
      <div className='flex relative'>
        <h1 className='font-semibold text-[40px] ml-[30px]'>Zustand Shopping Store</h1>
        <div className='absolute right-10 top-5'>
          <svg xmlns="http://www.w3.org/2000/svg" className="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
            <path strokeLinecap="round" strokeLinejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
        </div>
        <div className='absolute right-6 top-1 rounded-full px-[.40rem] py-[.10rem] bg-blue-500'>
          <h1 className='text-white text-sm font-semibold'>{cartData?.length}</h1>
        </div>
      </div>
      <div className='grid gap-8 grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 p-10 bg-slate-200'>
        {products.length && 
          products.map( product =>
            <div key={product.id}>
              <ShoppingList product={product} />
            </div>
          )
        }
      </div>
    </div>
  )
}

export default Home

export const getServerSideProps: GetServerSideProps = async (context) => {

  const URL = 'https://fakestoreapi.com/products';

    const response = await fetch(URL)
    const data = await response.json()
    // const crt:any = []

  return { 
    props: {
      products: data,
      // cart: crt,
    }
  }
}
